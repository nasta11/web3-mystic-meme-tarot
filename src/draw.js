const fs = require("fs");
const path = require("path");

// üîó IPFS-—Ö—ç—à (–≤—Ä–µ–º–µ–Ω–Ω–æ –º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å —Ñ–µ–π–∫–æ–≤—ã–π, –ø–æ–∑–∂–µ –∑–∞–º–µ–Ω–∏–º –Ω–∞ –Ω–∞—Å—Ç–æ—è—â–∏–π)
const IPFS_BASE = "ipfs://QmExampleHash";

// üé¥ –ö–æ–ª–æ–¥–∞ (—Ç–æ–ª—å–∫–æ –ø—Ä–∏–º–µ—Ä ‚Äî –ø–æ—Ç–æ–º –¥–æ–±–∞–≤–∏–º –≤—Å–µ 21)
const cards = [
  { name: "The Meme", meaning: "Origin ‚Äî chaos and creation" },
  { name: "The Rug", meaning: "Beware the pull of false promises in DeFi ‚Äî a warning of scams and exits." },
  { name: "The Seed", meaning: "Potential taking root; plant your vision." },
  { name: "The Wallet", meaning: "Identity and access ‚Äî protect your keys." },
  { name: "The Bridge", meaning: "Transition between worlds ‚Äî connection, evolution." }
];

// üåÄ –§—É–Ω–∫—Ü–∏—è –∑–∞–¥–µ—Ä–∂–∫–∏
const sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));

// üúè –ü—Ä–∏–∑—ã–≤–∞–Ω–∏–µ –æ–¥–Ω–æ–π –∫–∞—Ä—Ç—ã
async function summonOne() {
  console.clear();
  const messages = [
    "üúè Summoning your card...",
    "üåô Channeling Web3 energy...",
    "‚ú® The mists are parting..."
  ];
  for (const msg of messages) {
    process.stdout.write(msg);
    await sleep(900);
    process.stdout.write("\r" + " ".repeat(msg.length) + "\r");
  }

  const randomCard = cards[Math.floor(Math.random() * cards.length)];
  randomCard.image = `${IPFS_BASE}/${randomCard.name.replace(/\s+/g, "_")}.png`;

  console.log(`üîÆ Your card: ${randomCard.name}`);
  console.log(`üí´ Meaning: ${randomCard.meaning}`);
  console.log(`üñºÔ∏è Image: ${randomCard.image}\n`);

  fs.writeFileSync(
    "./metadata/output.json",
    JSON.stringify(randomCard, null, 2)
  );

  console.log("‚ú® Metadata exported to metadata/output.json");
  console.log("üñ§ May your fate unfold in code.");
}

// üóÇÔ∏è –≠–∫—Å–ø–æ—Ä—Ç –≤—Å–µ–π –∫–æ–ª–æ–¥—ã
function exportAll() {
  const dir = "./metadata/all";
  if (!fs.existsSync(dir)) fs.mkdirSync(dir, { recursive: true });

  cards.forEach((card, i) => {
    const fileSafeName = card.name.replace(/\s+/g, "_");
    const filename = path.join(dir, `${i + 1}-${fileSafeName}.json`);
    const metadata = {
      name: card.name,
      meaning: card.meaning,
      image: `${IPFS_BASE}/${fileSafeName}.png`,
      attributes: [
        { trait_type: "Card Type", value: "Tarot" },
        { trait_type: "Series", value: "Web3 Mystic Meme" }
      ]
    };
    fs.writeFileSync(filename, JSON.stringify(metadata, null, 2));
  });

  console.log(`ü™Ñ Exported ${cards.length} cards with IPFS links to ${dir}/`);
  console.log("‚ú® Ready for NFT minting or IPFS upload.");
}

// ‚öôÔ∏è –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–µ–∂–∏–º –∑–∞–ø—É—Å–∫–∞
if (process.argv.includes("--all")) {
  exportAll();
} else {
  summonOne();
}

